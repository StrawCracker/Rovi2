## *********************************************************
##
## File autogenerated for the caros_camera package
## by the dynamic_reconfigure package.
## Please do not edit.
##
## ********************************************************/

from dynamic_reconfigure.encoding import extract_params

inf = float('inf')

config_description = {'upper': 'DEFAULT', 'lower': 'groups', 'srcline': 245, 'name': 'Default', 'parent': 0, 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'cstate': 'true', 'parentname': 'Default', 'class': 'DEFAULT', 'field': 'default', 'state': True, 'parentclass': '', 'groups': [{'upper': 'CAPTURE', 'lower': 'capture', 'srcline': 124, 'name': 'Capture', 'parent': 0, 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'cstate': 'true', 'parentname': 'Default', 'class': 'DEFAULT::CAPTURE', 'field': 'DEFAULT::capture', 'state': True, 'parentclass': 'DEFAULT', 'groups': [], 'parameters': [{'srcline': 14, 'description': 'Pixel format', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'name': 'PixelFormat', 'edit_method': "{'enum_description': 'Pixel format', 'enum': [{'srcline': 10, 'description': '', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'cconsttype': 'const char * const', 'value': 'BayerRG8', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerRG8'}, {'srcline': 11, 'description': '', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'cconsttype': 'const char * const', 'value': 'Mono8', 'ctype': 'std::string', 'type': 'str', 'name': 'Mono8'}]}", 'default': 'BayerRG8', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 21, 'description': 'Exposure setting', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'name': 'ExposureAuto', 'edit_method': "{'enum_description': 'Exposure setting', 'enum': [{'srcline': 16, 'description': '', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'cconsttype': 'const char * const', 'value': 'Continuous', 'ctype': 'std::string', 'type': 'str', 'name': 'ExposureContinuous'}, {'srcline': 17, 'description': '', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'cconsttype': 'const char * const', 'value': 'Once', 'ctype': 'std::string', 'type': 'str', 'name': 'ExposureOnce'}, {'srcline': 18, 'description': '', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'ExposureOff'}]}", 'default': 'Continuous', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 28, 'description': 'Gain setting', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'name': 'GainAuto', 'edit_method': "{'enum_description': 'Gain setting', 'enum': [{'srcline': 23, 'description': '', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'cconsttype': 'const char * const', 'value': 'Continuous', 'ctype': 'std::string', 'type': 'str', 'name': 'GainContinuous'}, {'srcline': 24, 'description': '', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'cconsttype': 'const char * const', 'value': 'Once', 'ctype': 'std::string', 'type': 'str', 'name': 'GainOnce'}, {'srcline': 25, 'description': '', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'GainOff'}]}", 'default': 'Continuous', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 35, 'description': 'Balance white setting', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'name': 'BalanceWhiteAuto', 'edit_method': "{'enum_description': 'Balance white setting', 'enum': [{'srcline': 30, 'description': '', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'cconsttype': 'const char * const', 'value': 'Continuous', 'ctype': 'std::string', 'type': 'str', 'name': 'BalanceWhiteContinuous'}, {'srcline': 31, 'description': '', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'cconsttype': 'const char * const', 'value': 'Once', 'ctype': 'std::string', 'type': 'str', 'name': 'BalanceWhiteOnce'}, {'srcline': 32, 'description': '', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'BalanceWhiteOff'}]}", 'default': 'Continuous', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 38, 'description': 'A positive integer specifying the gain factor.', 'max': 3, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'name': 'GainRaw', 'edit_method': '', 'default': 1, 'level': 0, 'min': 1, 'type': 'int'}, {'srcline': 41, 'description': "Sets the camera's exposure time in microseconds", 'max': 916000, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'name': 'ExposureTimeRaw', 'edit_method': '', 'default': 10000, 'level': 0, 'min': 10, 'type': 'int'}, {'srcline': 44, 'description': 'This boolean value enables the gamma correction', 'max': 127, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'name': 'BlackLevelRaw', 'edit_method': '', 'default': 0, 'level': 0, 'min': -128, 'type': 'int'}, {'srcline': 47, 'description': 'This boolean value enables the gamma correction', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'name': 'GammaEnable', 'edit_method': '', 'default': False, 'level': 0, 'min': False, 'type': 'bool'}, {'srcline': 50, 'description': "Sets the 'absolute' value of the acquisition frame rate. The 'absolute' value is a float value that sets the acquisition frame rate in frames per second.", 'max': 3.99999, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'name': 'Gamma', 'edit_method': '', 'default': 1.0, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 54, 'description': "This boolean value enables setting the camera's acquisition frame rate to a specified value.", 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'name': 'AcquisitionFrameRateEnable', 'edit_method': '', 'default': False, 'level': 0, 'min': False, 'type': 'bool'}, {'srcline': 57, 'description': "Sets the 'absolute' value of the acquisition frame rate. The 'absolute' value is a float value that sets the acquisition frame rate in frames per second.", 'max': 1000.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'name': 'AcquisitionFrameRateAbs', 'edit_method': '', 'default': 10.0, 'level': 0, 'min': 0.000466, 'type': 'double'}], 'type': '', 'id': 1}, {'upper': 'AOI_CONTROLS', 'lower': 'aoi_controls', 'srcline': 124, 'name': 'AOI_Controls', 'parent': 0, 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'cstate': 'true', 'parentname': 'Default', 'class': 'DEFAULT::AOI_CONTROLS', 'field': 'DEFAULT::aoi_controls', 'state': True, 'parentclass': 'DEFAULT', 'groups': [], 'parameters': [{'srcline': 63, 'description': 'This value sets the width of the area of interest in pixels.', 'max': 1280, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'name': 'Width', 'edit_method': '', 'default': 1280, 'level': 0, 'min': 16, 'type': 'int'}, {'srcline': 65, 'description': 'This value sets the height of the area of interest in pixels.', 'max': 1024, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'name': 'Height', 'edit_method': '', 'default': 1024, 'level': 0, 'min': 1, 'type': 'int'}, {'srcline': 67, 'description': 'This value sets the width of the auto function area of interest in pixels.', 'max': 1280, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'name': 'AutoFunctionAOIWidth', 'edit_method': '', 'default': 1280, 'level': 0, 'min': 1, 'type': 'int'}, {'srcline': 69, 'description': 'This value sets the height of the auto function area of interest in pixels.', 'max': 1024, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'name': 'AutoFunctionAOIHeight', 'edit_method': '', 'default': 1024, 'level': 0, 'min': 1, 'type': 'int'}], 'type': '', 'id': 2}, {'upper': 'TRANSMISSION', 'lower': 'transmission', 'srcline': 124, 'name': 'Transmission', 'parent': 0, 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'cstate': 'true', 'parentname': 'Default', 'class': 'DEFAULT::TRANSMISSION', 'field': 'DEFAULT::transmission', 'state': True, 'parentclass': 'DEFAULT', 'groups': [], 'parameters': [{'srcline': 73, 'description': 'Sets the packet size, must match the Maximum Transfer Unit (MTU) configured for the Network Adapter', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'name': 'GevSCPSPacketSize', 'edit_method': '', 'default': '1500', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 74, 'description': 'Sets the (Inter packet delay), increase this, if experiencing transmission errors', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/home/resps/rovi2/Rovi2/src/caros/hwcomponents/caros_camera/cfg/Basler.cfg', 'name': 'GevSCPD', 'edit_method': '', 'default': '100', 'level': 0, 'min': '', 'type': 'str'}], 'type': '', 'id': 3}], 'parameters': [], 'type': '', 'id': 0}

min = {}
max = {}
defaults = {}
level = {}
type = {}
all_level = 0

#def extract_params(config):
#    params = []
#    params.extend(config['parameters'])
#    for group in config['groups']:
#        params.extend(extract_params(group))
#    return params

for param in extract_params(config_description):
    min[param['name']] = param['min']
    max[param['name']] = param['max']
    defaults[param['name']] = param['default']
    level[param['name']] = param['level']
    type[param['name']] = param['type']
    all_level = all_level | param['level']

Basler_BayerRG8 = 'BayerRG8'
Basler_Mono8 = 'Mono8'
Basler_ExposureContinuous = 'Continuous'
Basler_ExposureOnce = 'Once'
Basler_ExposureOff = 'Off'
Basler_GainContinuous = 'Continuous'
Basler_GainOnce = 'Once'
Basler_GainOff = 'Off'
Basler_BalanceWhiteContinuous = 'Continuous'
Basler_BalanceWhiteOnce = 'Once'
Basler_BalanceWhiteOff = 'Off'
